schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
type Board {
  id: ID!
  label: String!
  tickets: [Ticket]
}

extend type Query {
  boards: [Board]
}

extend type Mutation {
  createBoard(label: String!): Board
  updateBoard(id: ID!, label: String!): Board
  removeBoard(id: ID!): Board
}
type Comment {
  id: ID!
  ticket: Ticket!
  body: String!
}

extend type Mutation {
  commentTicket(ticket: ID!, body: String!): Comment
  updateComment(id: ID!, body: String!): Comment
  removeComment(id: ID!): Comment
}
type Mutation {
  _: Boolean
}
type Query {
  _: Boolean
}
input TicketInput {
  board: ID!
  label: String!
  body: String
}
type Ticket {
  id: ID!
  label: String!
  body: String
  board: Board
  created: String
  comments: [Comment]
}

extend type Query {
  ticket(id: ID!): Ticket
}

extend type Mutation {
  createTicket(ticket: TicketInput!): Ticket
  moveTicket(id: ID!, board: ID!): Ticket
  updateTicket(id: ID!, ticket: TicketInput!): Ticket
  removeTicket(id: ID!): Ticket
}
type User {
  id: ID!
  email: String!
  password: String!
}

extend type Query {
  users: [User]
}

extend type Mutation {
  createUser(email: String!, password: String!): String
  login(email: String!, password: String): String
  validate(token: String!): Boolean
}
